{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","currentPage","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","push","_jsx","children","_jsxs","className","concat","href","onClick","handlePrevPage","map","number","length","handleNextPage","OPTIONS","items","from","to","numbers","n","getNumbers","App","setCurrentPage","useState","setItemsPerPage","currentItems","slice","min","id","value","onChange","event","parseInt","target","option","htmlFor","pageNumber","item","ReactDOM","render","document","getElementById"],"mappings":"uKAOO,MAAMA,EAA8BC,IAKpC,IALqC,YAC1CC,EAAW,aACXC,EAAY,WACZC,EAAU,SACVC,GACDJ,EACC,MAAMK,EAAc,GAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,GAAK,EAC9DD,EAAYI,KAAKH,GAmBnB,OACEI,cAAA,OAAAC,SACEC,eAAA,MAAIC,UAAU,aAAYF,SAAA,CACxBD,cAAA,MAAIG,UAAS,aAAAC,OAA+B,IAAhBb,EAAoB,WAAa,IAAKU,SAChED,cAAA,KACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAfaC,KACjBhB,EAAc,GAChBG,EAASH,EAAc,IAaOU,SACzB,WAKFN,EAAYa,KAAIC,GACfT,cAAA,MAEEG,UAAS,aAAAC,OAAeb,IAAgBkB,EAAS,SAAW,IAAKR,SAEjED,cAAA,KACEK,KAAI,IAAAD,OAAMK,GACVN,UAAU,YACV,UAAQ,WACRG,QAASA,KAvCnBZ,EAuCqCe,IAAQR,SAElCQ,KATEA,KAcTT,cAAA,MACEG,UAAS,aAAAC,OAAeb,IAAgBI,EAAYe,OAAS,WAAa,IAAKT,SAE/ED,cAAA,KACE,UAAQ,WACRG,UAAU,YACVE,KAAK,QACL,gBAAed,IAAgBI,EAAYe,OAC3CJ,QAnDaK,KACjBpB,EAAcI,EAAYe,QAC5BhB,EAASH,EAAc,IAiDOU,SACzB,iBCtELW,EAAU,CAAC,EAAG,EAAG,GAAI,IAGrBC,ECRC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQjB,KAAKkB,GAGf,OAAOD,EDCKE,CAAW,EAAG,IAAIV,KAAIS,GAAC,QAAAb,OAAYa,KAEpCE,EAAgBA,KAC3B,MAAO5B,EAAa6B,GAAkBC,mBAAS,IACxC7B,EAAc8B,GAAmBD,mBAAST,EAAQ,IAEnDnB,EAAaoB,EAAMH,OAMnBa,EAAeV,EAAMW,OACxBjC,EAAc,GAAKC,EACpBD,EAAcC,GAGhB,OACEU,eAAA,OAAKC,UAAU,YAAWF,SAAA,CACxBD,cAAA,MAAAC,SAAI,0BAEJC,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMF,SAAA,CAAC,QAC3BV,EAAY,YAAUA,EAAc,GAAKC,EAAe,EAAE,KAAG,IAClEK,KAAK4B,IAAIlC,EAAcC,EAAcC,GAAY,OAAKA,EAAW,OAGpES,eAAA,OAAKC,UAAU,iBAAgBF,SAAA,CAC7BD,cAAA,OAAKG,UAAU,0BAAyBF,SACtCD,cAAA,UACE,UAAQ,kBACR0B,GAAG,kBACHvB,UAAU,eACVwB,MAAOnC,EACPoC,SAAUC,IACRP,EAAgBQ,SAASD,EAAME,OAAOJ,MAAO,KAC7CP,EAAe,IACfnB,SAEDW,EAAQJ,KAAIwB,GAEThC,cAAA,UAAqB2B,MAAOK,EAAO/B,SAChC+B,GADUA,SAQrBhC,cAAA,SAAOiC,QAAQ,kBAAkB9B,UAAU,qBAAoBF,SAAC,sBAKlED,cAACX,EAAU,CACTE,YAAaA,EACbC,aAAcA,EACdC,WAAYA,EACZC,SAjDoBwC,IACxBd,EAAec,MAmDblC,cAAA,MAAAC,SACGsB,EAAaf,KAAI2B,GAChBnC,cAAA,MAAI,UAAQ,OAAMC,SACfkC,GADqBA,WEnElCC,IAASC,OAAOrC,cAACmB,EAAG,IAAKmB,SAASC,eAAe,U","file":"static/js/main.bd911b1b.chunk.js","sourcesContent":["interface Props {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  paginate: (pageNumber: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  currentPage,\n  itemsPerPage,\n  totalItems,\n  paginate,\n}) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const handleClick = (pageNumber: number) => {\n    paginate(pageNumber);\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < pageNumbers.length) {\n      paginate(currentPage + 1);\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      paginate(currentPage - 1);\n    }\n  };\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={handlePrevPage}\n          >\n            «\n          </a>\n        </li>\n\n        {pageNumbers.map(number => (\n          <li\n            key={number}\n            className={`page-item ${currentPage === number ? 'active' : ''}`}\n          >\n            <a\n              href={`#${number}`}\n              className=\"page-link\"\n              data-cy=\"pageLink\"\n              onClick={() => handleClick(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n\n        <li\n          className={`page-item ${currentPage === pageNumbers.length ? 'disabled' : ''}`}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === pageNumbers.length}\n            onClick={handleNextPage}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst OPTIONS = [3, 5, 10, 20];\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(OPTIONS[1]);\n\n  const totalItems = items.length;\n\n  const handlePagination = (pageNumber: number) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const currentItems = items.slice(\n    (currentPage - 1) * itemsPerPage,\n    currentPage * itemsPerPage,\n  );\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {(currentPage - 1) * itemsPerPage + 1} -{' '}\n        {Math.min(currentPage * itemsPerPage, totalItems)} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={event => {\n              setItemsPerPage(parseInt(event.target.value, 10));\n              setCurrentPage(1);\n            }}\n          >\n            {OPTIONS.map(option => {\n              return (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={totalItems}\n        paginate={handlePagination}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}